plugins {
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'jacoco'
}

group = 'org.springframework.samples'
version = '1.5.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // DB
    runtimeOnly 'org.hsqldb:hsqldb'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    // Cache
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache'

    // WebJars (+ Versionen)
    implementation 'org.webjars:webjars-locator:0.48'
    implementation 'org.webjars:jquery:2.2.4'
    implementation 'org.webjars:jquery-ui:1.11.4'
    implementation 'org.webjars:bootstrap:3.3.6'

    // Devtools
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Hibernate Validator (optional, wenn du direkt NotEmpty, etc. ben√∂tigst)
    // oft reicht auch: org.springframework.boot:spring-boot-starter-validation
    implementation 'org.hibernate.validator:hibernate-validator:6.2.5.Final'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

// Test mit JUnit 4
test {
    useJUnit()
}
